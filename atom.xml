<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Wei715547.github.io</id>
    <title>Wei: Development technology accumulation</title>
    <updated>2020-08-14T07:12:10.368Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Wei715547.github.io"/>
    <link rel="self" href="https://Wei715547.github.io/atom.xml"/>
    <subtitle>年月增长，我宜强盛。
用于Unity+开发的技术积累</subtitle>
    <logo>https://Wei715547.github.io/images/avatar.png</logo>
    <icon>https://Wei715547.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Wei: Development technology accumulation</rights>
    <entry>
        <title type="html"><![CDATA[设计模式(3)-Builder]]></title>
        <id>https://Wei715547.github.io/post/she-ji-mo-shi-3-builder/</id>
        <link href="https://Wei715547.github.io/post/she-ji-mo-shi-3-builder/">
        </link>
        <updated>2020-08-14T06:18:04.000Z</updated>
        <content type="html"><![CDATA[<p><a href = "https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/builder.html">建造者模式</a></p>
<p>using System;</p>
<p>namespace 设计模式_建造者模式<br>
{<br>
class Program<br>
{</p>
<pre><code>    public abstract class House
    {

    }
    public abstract class Door
    {

    }
    public abstract class Wall
    {

    }
    public abstract class Windins
    {

    }
    public abstract class Floor
    {

    }
    public abstract class HouseCeiling
    {

    }

    public abstract class Builder
    {
        public abstract void BuilderDoor();
        public abstract void BuilderWall();
        public abstract void BuilderWindows();
        public abstract void BuilderFloor();
        public abstract void BuilderHouseCeiling();

        public abstract House GetHouse();
    }

    //客户程序
    static void Main(string[] args)
    {
        House house = GameManager.CreateHouse(new RomaHouseBuilder());
    }

    public class RomanHouse:House
    {

    }

    public class RomaHouseBuilder : Builder
    {
        public override void BuilderDoor()
        {
            throw new NotImplementedException();
        }

        public override void BuilderFloor()
        {
            throw new NotImplementedException();
        }

        public override void BuilderHouseCeiling()
        {
            throw new NotImplementedException();
        }

        public override void BuilderWall()
        {
            throw new NotImplementedException();
        }

        public override void BuilderWindows()
        {
            throw new NotImplementedException();
        }

        public override House GetHouse()
        {
            throw new NotImplementedException();
        }
    }

}
</code></pre>
<p>}</p>
<p>using System;<br>
using System.Collections.Generic;<br>
using System.Text;<br>
using static 设计模式_建造者模式.Program;</p>
<p>namespace 设计模式_建造者模式<br>
{<br>
class GameManager<br>
{<br>
public static House CreateHouse(Builder builder)<br>
{<br>
builder.BuilderDoor();<br>
builder.BuilderDoor();</p>
<pre><code>        builder.BuilderWall();
        builder.BuilderWall();

        builder.BuilderWindows();
        builder.BuilderWindows();

        builder.BuilderFloor();
        builder.BuilderHouseCeiling();

        return builder.GetHouse();
    }
}
</code></pre>
<p>}</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[设计模式(2)-Absstract Factory]]></title>
        <id>https://Wei715547.github.io/post/she-ji-mo-shi-2-absstract-factory/</id>
        <link href="https://Wei715547.github.io/post/she-ji-mo-shi-2-absstract-factory/">
        </link>
        <updated>2020-08-13T15:38:52.000Z</updated>
        <content type="html"><![CDATA[<p><a href= "https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/abstract_factory.html">抽象工厂</a></p>
<p>using System;</p>
<p>namespace 设计模式_抽象工厂<br>
{<br>
class Program<br>
{<br>
public abstract class Road<br>
{</p>
<pre><code>    }
    public abstract class Building
    {

    }
    public abstract class Tunnel
    {

    }
    public abstract class Jungle
    {

    }

    public abstract class FacilitiesFactory
    {
        public abstract Road CreateRoad();
        public abstract Building CreateBuilding();
        public abstract Tunnel CreateTunnel();
        public abstract Jungle CreateJungle();

    }

    //客户程序-GameManager
    class GameManager
    {
        FacilitiesFactory facilitiesFactory;

        public GameManager(FacilitiesFactory facilitiesFactory)
        {
            this.facilitiesFactory = facilitiesFactory;
        }

        public void BuildGameFacilities()
        {
            Road road = facilitiesFactory.CreateRoad();
            Building building = facilitiesFactory.CreateBuilding();
            Tunnel tunnel = facilitiesFactory.CreateTunnel();
            Jungle jungle = facilitiesFactory.CreateJungle();
        }


    }

    static void Main(string[] args)
    {
        GameManager gameManager = new GameManager(new MDFacilitiesFactory ());

        gameManager.BuildGameFacilities();
        
    }
    #region 一种工厂和抽象子类
    public class MDFacilitiesFactory:FacilitiesFactory
    {
        public override Road CreateRoad()
        {
            return new MDRoad();
        }
        public override Building CreateBuilding()
        {
            return new MDBuilding();
        }
        public override Tunnel CreateTunnel()
        {
            return new MDTunnel();
        }
        public override Jungle CreateJungle()
        {
            return new MDJungle();
        }

    }

    public  class MDRoad:Road
    {

    }
    public  class MDBuilding:Building
    {

    }
    public  class MDTunnel:Tunnel
    {

    }
    public  class MDJungle:Jungle
    {

    }
</code></pre>
<p>#endregion<br>
}<br>
}</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[设计模式(1)Singleton]]></title>
        <id>https://Wei715547.github.io/post/she-ji-mo-shi-1singleton/</id>
        <link href="https://Wei715547.github.io/post/she-ji-mo-shi-1singleton/">
        </link>
        <updated>2020-08-12T15:29:22.000Z</updated>
        <content type="html"><![CDATA[<p><a href= "https://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/singleton.html">单例模式</a></p>
<p>using System;</p>
<p>namespace 设计模式_单例模式<br>
{<br>
class Program<br>
{<br>
/// <summary><br>
/// 单例模式（不适应与多线程）<br>
/// </summary><br>
public class Singleton<br>
{<br>
private static Singleton insrence;</p>
<pre><code>        private Singleton() { }

        public  static Singleton Instence
        {
            get 
            { 
                if (insrence==null)
                {
                    insrence = new Singleton(); 
                }
                return insrence;
            }
        }
    }
    
    /// &lt;summary&gt;
    /// 适用于多线程
    /// &lt;/summary&gt;
    public class SingletonTrs
    {
        private static volatile SingletonTrs instence;//volatile:保证代码编译后严格按照此执行顺序

        private static object lockHelper = new object();
        private SingletonTrs() { }

        public static SingletonTrs Instence
        {
            get
            {
                //双重检查-多线程访问时保证只生成一个单例
                if (instence == null)
                {
                    lock (lockHelper)
                    {
                        if (instence == null)
                        {
                            instence = new SingletonTrs();
                        }
                    }
                }
                return instence;
            }

        }
    }
    /// &lt;summary&gt;
    /// 适用于多线程
    /// &lt;/summary&gt;
    class Singleton3
    {
        public static readonly Singleton3 Instence = new Singleton3();//内联初始化
        private Singleton3() { }
    }
    /// &lt;summary&gt;
    /// 同上
    /// &lt;/summary&gt;
    class Singletog33
    {
        public static readonly Singletog33 Instence;

        static Singletog33()//放在静态构造器，先于静态属性执行(只会被一个线程执行) 缺点：无法传递参数
        {
            Instence = new Singletog33();
        }
        private Singletog33() { }
    }

    static void Main(string[] args)
    {
        
    }
}
</code></pre>
<p>}</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[XML]]></title>
        <id>https://Wei715547.github.io/post/xml/</id>
        <link href="https://Wei715547.github.io/post/xml/">
        </link>
        <updated>2020-08-12T08:40:51.000Z</updated>
        <content type="html"><![CDATA[<p>using System;<br>
using System.IO;<br>
using System.Xml;<br>
namespace XML<br>
{<br>
class Program<br>
{<br>
static void Main(string[] args)<br>
{<br>
//string flePath = @&quot;D:\715\CSharp\xml.txt&quot;;<br>
//1.创建XML对象<br>
XmlDocument xmlDoc = new XmlDocument();<br>
//2.创建第一行文件信息，加入doc中<br>
XmlDeclaration doc = xmlDoc.CreateXmlDeclaration(&quot;1.0&quot;, &quot;utf-8&quot;, null);//版本，编码格式<br>
xmlDoc.AppendChild(doc);<br>
//3.创建根节点<br>
XmlElement books = xmlDoc.CreateElement(&quot;Books&quot;);<br>
books.SetAttribute(&quot;书目&quot;, &quot;2.0&quot;);<br>
xmlDoc.AppendChild(books);//将根节点添加到XML表中</p>
<pre><code>        //4.创建根节点的子节点
        XmlElement book1 = xmlDoc.CreateElement(&quot;Book&quot;);
        books.AppendChild(book1);
        //创建子节点的子节点
        XmlElement name1 = xmlDoc.CreateElement(&quot;Name&quot;);
        XmlElement price1 = xmlDoc.CreateElement(&quot;Price&quot;);
        name1.InnerText = &quot;Wei&quot;;
        price1.InnerText = &quot;170&quot;;
        book1.AppendChild(name1);
        book1.AppendChild(price1);

        //根节点的另一个子节点
        XmlElement book2 = xmlDoc.CreateElement(&quot;Book&quot;);
        books.AppendChild(book2);

        XmlElement name2 = xmlDoc.CreateElement(&quot;Name&quot;);
        name2.InnerText = &quot;ZZ&quot;;
        XmlElement price2 = xmlDoc.CreateElement(&quot;Price&quot;);
        price2.InnerText = &quot;150&quot;;
        book2.AppendChild(name2);
        book2.AppendChild(price2);


        xmlDoc.Save(@&quot;D:\715\CSharp\xml.txt&quot;);
        Console.WriteLine(&quot;保持成功&quot;);
        Console.ReadLine();

        /*//追加XML文档
        XmlDocument xmlDoc = new XmlDocument();
        XmlElement root;
        if(File.Exists(@&quot;D:\715\CSharp\xml2.txt&quot;))
        {
            //如存在则加载XML文档
            xmlDoc.Load(@&quot;D:\715\CSharp\xml2.txt&quot;);
            //获取根节点
            root = xmlDoc.DocumentElement;
            
        }
        else
        {
            XmlDeclaration doc = xmlDoc.CreateXmlDeclaration(&quot;1.0&quot;, &quot;utf-8&quot;, null);//版本，编码格式
            xmlDoc.AppendChild(doc);
            //3.创建根节点
            root = xmlDoc.CreateElement(&quot;Books&quot;);
            root.SetAttribute(&quot;书目&quot;, &quot;2.0&quot;);
            xmlDoc.AppendChild(root);//将根节点添加到XML表中
        }

        XmlElement book2 = xmlDoc.CreateElement(&quot;Book&quot;);
        root.AppendChild(book2);

        XmlElement name2 = xmlDoc.CreateElement(&quot;Name&quot;);
        name2.InnerText = &quot;ZL&quot;;
        XmlElement price2 = xmlDoc.CreateElement(&quot;Price&quot;);
        price2.InnerText = &quot;30000&quot;;
        book2.AppendChild(name2);
        book2.AppendChild(price2);
        xmlDoc.Save(@&quot;D:\715\CSharp\xml2.txt&quot;);*/

        /*//读取XML文档
        XmlDocument xmlDoc = new XmlDocument();
        //加载文档获取根节点
        xmlDoc.Load(@&quot;D:\715\CSharp\xml2.txt&quot;);
        XmlElement root = xmlDoc.DocumentElement;
        //获取子节点 返回子节点的集合
        XmlNodeList xnl = root.ChildNodes;

        foreach (XmlNode node in xnl)
        {
            Console.WriteLine(node.InnerText );
        }*/

        /*//Xpath:获取节点属性
        XmlDocument xmlDoc = new XmlDocument();
        xmlDoc.Load(@&quot;D:\715\CSharp\xml2.xml&quot;);
        XmlNodeList nodes = xmlDoc.SelectNodes(&quot;/Books/Book&quot;);

        foreach (XmlNode node in nodes)
        {
            Console.WriteLine(node.Attributes[&quot;W&quot;].Value);
        }*/

        /*//删除节点
        XmlDocument xmlDoc = new XmlDocument();
        xmlDoc.Load(@&quot;D:\715\CSharp\xml2.txt&quot;);
        XmlNode sel = xmlDoc.SelectSingleNode(&quot;/Books/Book&quot;);
        sel.RemoveAll();
        xmlDoc.Save(@&quot;D:\715\CSharp\xml2.xml&quot;);*/

    }
}
</code></pre>
<p>}<br>
<img src="https://Wei715547.github.io/post-images/1597221722705.PNG" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Shader Graph]]></title>
        <id>https://Wei715547.github.io/post/shader-graph/</id>
        <link href="https://Wei715547.github.io/post/shader-graph/">
        </link>
        <updated>2020-08-09T08:18:59.000Z</updated>
        <content type="html"><![CDATA[<p>插件：<br>
<img src="https://Wei715547.github.io/post-images/1596961449787.PNG" alt="" loading="lazy"><br>
<img src="https://Wei715547.github.io/post-images/1596961454813.PNG" alt="" loading="lazy"><br>
<img src="https://Wei715547.github.io/post-images/1596961458633.PNG" alt="" loading="lazy"></p>
<p>1.模型描边Shader<br>
<img src="https://Wei715547.github.io/post-images/1596962700788.PNG" alt="" loading="lazy"><br>
2.溶解<br>
<img src="https://Wei715547.github.io/post-images/1597055626206.PNG" alt="" loading="lazy"><br>
<img src="https://Wei715547.github.io/post-images/1597056634207.PNG" alt="" loading="lazy"><br>
3.水面<br>
<img src="https://Wei715547.github.io/post-images/1596962706638.PNG" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[DIV-pox]]></title>
        <id>https://Wei715547.github.io/post/div-pox/</id>
        <link href="https://Wei715547.github.io/post/div-pox/">
        </link>
        <updated>2020-08-08T15:12:01.000Z</updated>
        <content type="html"><![CDATA[<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>无标题文档</title>
<style type="text/css">
div{
	height:300px;
	width:300px;
}
div.div1{
	background-color: #F30;
	top:100px;
	left:100px;
	position:absolute;<!--绝对位置-->
	z-index:3;
}
div.div2{
	background-color: #6F0;
	top: 130px;
	left:130px;
	position:absolute;
	z-index:2;
}
div.div3{
	background-color: #00F;
	top:160px;
	left:160px;
	position:absolute;
	z-index:1;
}
div.div5{
<pre><code>right: 0px;
bottom: 0px;
position: fixed;
background-color: #FFC
</code></pre>
<p>}<br>
</style></p>
</head>
<body>
	<div class="div1"></div>
    <div class="div2"></div>
    <div class="div3"></div>
    <br />
    <div class="div5"></div>
    <br /><br /><br /><br /><br /><br /><br /><br />
    <br /><br /><br /><br /><br /><br /><br /><br />
    <br /><br /><br /><br /><br /><br /><br /><br />
    <br /><br /><br /><br /><br /><br /><br /><br />
    <br /><br /><br /><br /><br /><br /><br /><br />
    <br /><br /><br /><br /><br /><br /><br /><br />
    <br /><br /><br /><br /><br /><br /><br /><br />
</body>
</html>
<p>布局：</p>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>无标题文档</title>
<style type="text/css">
	.divIndex{
		width:900px;
		height:2000px;
		background-color: #9F6; 
		margin: 0px auto;<!--两个参数是时，上下：左右-->
	}
	.divLog{
			width:900px;
			height:100px;
			background-color: #F90
		}
	.divContent{
		width:900px;
		height:300px;
		background-color:#3FF	
	}
	.divLeft{
		width:300px;
		height:300px;
		background-color:#F9C;
		float:left;
	}
	.divRight{
		width:600px;
		height:300px;
		background-color:#CCC;
		float:left
	}
</style>
</head>
<body>
	<div class="divIndex">
    	<div class="divLog">
        </div>
        <div class="divContent">
        <div class="divLeft"></div>
        <div class="divRight"></div>
        </div>
    </div>
</body>
</html>
<p>实例：</p>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>综合布局</title>
<style type="text/css">
*{
	margin:0px;
	font-size:12px;
}
	div.divIndex{
		height: 380px;
		width:290px;
		background-color:#F8F8F8;
		margin:0px auto;
	}
	.div1{
		width: 290px;
		height:35px;
		background-color:#6FF;
		
		color:#FFF;
		text-align:center
	}
	div.div1 p{
		padding: 8px;
		font-size:17px;
	}
	#table1{
		width: 290px;
	}
	td.td1{
		font-weight: bolder;
	}
	td.td2{
		color:#246082;
		padding:5px;
		border-bottom-style: dashed;
		border-bottom:qpx dashed #123456;
	}
	td.td3{
		font-weight: bolder;
		color:#F00;
		border-bottom:1px dashed #cccccc;
		text-align:right;
	}
	div.divTable{
		margin:0px auto;
	}
</style>
</head>
<body>
	<div class="divIndex">
    	<table id="table1" >
        	<tr>
            	<td> <div class="div1"><p>.Net信息</p></div>
            </tr>
            <tr>
            	<td>
                <div class="divTable">
                	<table width="290px">
                    	<tr>
                        	<td width="92" class="td1">WEI</td>
                            <td width="157"></td>
                        </tr>
                        <tr>
                        	<td class="td2">北京--2020年9-9</td>
                            <td class="td3">预约报名中</td>
                        </tr>
                        <tr>
                        	<td class="td2">北京--2020年9-9</td>
                            <td class="td3">预约报名中</td>
                        </tr>
                        <tr>
                        	<td class="td2">北京--2020年9-9</td>
                            <td class="td3">预约报名中</td>
                        </tr>
                        <tr>
                        	<td class="td1">WEI</td>
                            <td></td>
                        </tr>
                        <tr>
                        	<td class="td2">北京--2020年9-9</td>
                            <td class="td3">预约报名中</td>
                        </tr>
                        <tr>
                        	<td class="td2">北京--2020年9-9</td>
                            <td class="td3">预约报名中</td>
                        </tr>
                        <tr>
                        	<td class="td2">北京--2020年9-9</td>
                            <td class="td3">预约报名中</td>
                        </tr>
                    </table>
                    </div>
                </td>
            </tr>
        </table>
    </div>
</body>
</html>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[选择器]]></title>
        <id>https://Wei715547.github.io/post/xuan-ze-qi/</id>
        <link href="https://Wei715547.github.io/post/xuan-ze-qi/">
        </link>
        <updated>2020-08-08T14:50:00.000Z</updated>
        <content type="html"><![CDATA[<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>无标题文档</title>
<style type="text/css">
<!--1.HTML选择器-->
	p{
		background-color: #FC9;
	}
	tt{
		background-color: #0FC
	}
	<!--2.类选择器-->
	tt.tt1{
		background-color: #F33
	}
	tt.tt2{
		font: xx-large
	}
	<!--3.ID选择器-->
<pre><code>#p1{
	background-color: #CF6
}
p#p2{
	background-color: #00F
}
&lt;!--4.关联选择器--&gt;
p em{
	font: xx-large
}
&lt;!--5.组合标签--&gt;
h1,h2,h3,td{
	background-color: #F9F
}
&lt;!--6.伪元素--&gt;
A：active{
	text-decortion:none
}
A:hover{
	font-size: xx-large
}
p::first-letter{
	font-size: xx-small
}
p::first-line{
	font-size: xx-large
}
</code></pre>
</style>
</head>
<body>
	<p id="p1">www.bilibili.com</p>
    <p id="p1">www.bilibili.com</p>
    <p id="p2">www.bilibili.com</p>
    <p>www.bilibili.com</p>
    <p>www.bilibili.com</p>
    <tt class="tt1">12345678901234567890</tt>
    <tt class="tt2">12345678901234567890</tt>
    <tt>12345678901234567890</tt>
    <tt>12345678901234567890</tt>
    <tt>12345678901234567890</tt>
<pre><code>&lt;p&gt;&lt;em&gt;233333333333333333&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;组合选择器&lt;/h1&gt;
&lt;h2&gt;组合选择&lt;/h2&gt;
&lt;h3&gt;组合选择&lt;/h3&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;组合标签&lt;/td&gt;
&lt;td&gt;组合标签&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;组合标签&lt;/td&gt;
&lt;td&gt;组合标签&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;组合标签&lt;/td&gt;
&lt;td&gt;组合标签&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;a href=&quot;http://www.bilibili.com&quot;&gt;哔哩哔哩&lt;/a&gt;
</code></pre>
</body>
</html>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[写入CSS方式]]></title>
        <id>https://Wei715547.github.io/post/xie-ru-css-fang-shi/</id>
        <link href="https://Wei715547.github.io/post/xie-ru-css-fang-shi/">
        </link>
        <updated>2020-08-08T14:20:42.000Z</updated>
        <content type="html"><![CDATA[<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>CSS写入方式</title>
<!--内联样式表:优先级最低-->
<link href="1.css" rel="stylesheet" type="text/css"/>
<!--嵌入样式表-->
<style type="text/css">
p{
 background-color: #F39;
 front:xx-large;
}
</style>
</head>
<body>
	<!--内联样式表:优先级最高-->
    <p style="background-color: #F90; font-size:10">www.bilibili.com</p>
    <p>qwdxqwedqqwqwd </p>
<pre><code>&lt;tt&gt;12312e41242141241&lt;/tt&gt;
</code></pre>
</body>
</html>
<p>1.css<br>
@charset &quot;utf-8&quot;;<br>
/* CSS Document */<br>
tt<br>
{<br>
background-color:#6FC;<br>
font:xx-large;<br>
}</p>
<p>p<br>
{<br>
background-color:#609<br>
font:xx-large<br>
}</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[框架标签]]></title>
        <id>https://Wei715547.github.io/post/kuang-jia-biao-qian/</id>
        <link href="https://Wei715547.github.io/post/kuang-jia-biao-qian/">
        </link>
        <updated>2020-08-07T15:44:36.000Z</updated>
        <content type="html"><![CDATA[<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>无标题文档</title>
</head>
<frameset rows="15%,*">
<frame src="top.html" noresize="noresize" />
<frameset cols="50%s,*">
<frame src="left.html"  name="left"/> 
<frame src="right.html"/>
</frameset>
</frameset><noframes></noframes>
</html>
————————————————————————————————————
LEFT
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>无标题文档</title>
</head>
<body bgcolor="#66FFFF">
LEFT
<a href="https://wei715547.github.io">WEI</a>
</body>
</html>
_____________________________________________________________________________
RIGHT
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>无标题文档</title>
</head>
<body bgcolor="#FFCC00">
RIGHT
<a href="http://www.bilibili.com" target="left">哔哩哔哩</a>
</body>
</html>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTML]]></title>
        <id>https://Wei715547.github.io/post/html/</id>
        <link href="https://Wei715547.github.io/post/html/">
        </link>
        <updated>2020-08-04T14:13:47.000Z</updated>
        <content type="html"><![CDATA[<p>基本结构</p>
<hr>
<html>
        <head>
               <title>网页标题</title>
        </head>
        <body>
                    网页内容
        </body>
</html>
—————————————————————————————————
class1：
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>HTML</title>
</head>
<body>
	<p>喵啊</p><!--段落-->
    <p>妙&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;啊</p><!--空格：&nbsp;-->
    <h1>我是标题</h1>
    <h2>我是标题</h2>
    <h3>我是标题</h3>
    <h4>我是标题</h4>
<h5>我是标题</h5>
    <img src="2.jpg" width="720" height="1280" border ="5px" title="漂亮" alt="Mays"/>
    <!--属性名=值
    src:要显示的图片路径
    width：宽度（px）
    heigh:高度
    border:边框宽度
    title:鼠标悬停时显示的字符
    alt:图片丢失时所显示的备份文字
    -->
    <p><b>Hello Word</b></p>
    <hr/><!--分割线-->
    <p>Hello Word</p>
<p>Hello Word</p>
    <p>Hello Word</p>
    <p>Hello Word</p>
    <hr/>
    Hello Word<br/><!--换行-->
    Hello Word<br/>
    5&gt;3<br/> <!--大于：&gt; 小于:&lt; &:&amp;-->
    3&lt;5 &amp;&amp;&amp;<br/>
    <font size="5" color="#FF0000" face="Comic Sans MS, cursive">每单只需</font> <font size="7" color="#66FFFF">8888元</font>
    <!--以代码形式显示-->
    <pre>
    <code>
    		for(i=0;i<100;i++)
            {
            	print("WEI");
            }
     </code>
     </pre>
     <!--图片滑行-->
     <marquee direction="right"  behavior="slide" ><img src="2.jpg"  width="720" height="1280" /></marquee>
     <br/>     
     <a  name="C1" href="class2.html#C2">C2</a>
</body>
</html>
![](https://Wei715547.github.io/post-images/1596552695480.jpg)
![](https://Wei715547.github.io/post-images/1596553108815.PNG)
<p>——————————————————————————————————————————</p>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Class2</title>
</head>
<body>
<a href="http://www.bilibili.com"  target="_blank">哔哩哔哩</a> <br/>
<a href="mailto:1941071686@qq.com">发送邮件到WEI</a><br/>
<a name="C2" href="Base_Tag.html#C1"> C1</a><br/>
<a name="TOP" href="#DOWN">回到底端</a>
<br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>
<a name="DOWN"  href="#TOP">回到顶端</a>
</body>
</html>
![](https://Wei715547.github.io/post-images/1596554028605.jpg)
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>body中的属性</title>
</head>
<body text="blue" link="#00FFFF" alink="red" bgcolor="#FFD0E0" background="2.jpg">
妙啊
<a href="#">超链接</a>
<a href="#">超链接</a>
<a href="#">超链接</a>
<a href="#">超链接</a>
<a href="#">超链接</a>
<br/>
<!--列表-->
<u1 type="square">
	<li>第一行</li>
    <li>第2行</li>
    <li>第3行</li>
    <li>第4行</li>
    <li>第5行</li>    
</u1>
<hr/>
<ol type="a">
	<li>第一行</li>
    <li>第一行</li>
    <li>第一行</li>
    <li>第一行</li>
    <li>第一行</li>
</ol><br/>
<dl>
	<dt>面向对象</dt>
    <dd>封装</dd>
    <dd>继承</dd>
    <dd>多态</dd>
</dl>
<br/>
<table border="5px" cellspacing="5px" cellpadding="5px">
	<tr>
    <td colspan="3"> html表格</td><!--跨行-->
    </tr>
	<tr>
    <td rowspan="2"><a href="www.bilibili.com">哔哩哔哩</a></td><!--跨列-->
    <td>WEI</td>
    <td>ZL</td>
    </tr>
    <tr>
<pre><code>&lt;td&gt;www&lt;/td&gt;
&lt;td&gt;zzz&lt;/td&gt;
&lt;/tr&gt;
</code></pre>
</table>
</body>
</html>
————————————————————————————————————
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>表单</title>
</head>
<body>
	<form action="www.baidu.com" method="get">
    用户名：<input type="text"  name="txtName"/><br />
    密码：<input type="password"  name="txtPassword"/><br />
    <input type="submit"  value="提交"/>
    <input type="reset"  value="重置"/><br />
    <fieldset>
    <legend>性别</legend>
    <input type="radio" name="sex"/>男<br />
    <input type="radio" name="sex" />女<br />
    </fieldset>
    <fieldset>
    <legend>婚姻状况</legend>
    <input type="radio" name="married"/>yh<br />
    <input type="radio" name="married" />wh<br />
    </fieldset>
<pre><code>&lt;select size=&quot;1&quot;&gt;
	&lt;optgroup label = &quot;中国&quot;&gt;
	&lt;option&gt;辽宁&lt;/option&gt;
    &lt;option&gt;浙江&lt;/option&gt;
    &lt;option&gt;上海&lt;/option&gt;
    &lt;option&gt;重庆&lt;/option&gt;
    &lt;option&gt;广东&lt;/option&gt;
   &lt;/optgroup&gt;
   &lt;optgroup label = &quot;米国&quot;&gt;
	&lt;option&gt;洛杉矶&lt;/option&gt;
    &lt;option&gt;旧金山&lt;/option&gt;
    &lt;option&gt;芝加哥&lt;/option&gt;
    &lt;option&gt;华盛顿&lt;/option&gt;
    &lt;option&gt;曼哈顿&lt;/option&gt;
   &lt;/optgroup&gt;
&lt;/select&gt;&lt;br /&gt;
&lt;input type=&quot;file&quot; /&gt;&lt;br /&gt;
&lt;textarea cols=&quot;50&quot; rows=&quot;20&quot;&gt;
wxqdwexqwcq wecq qs qs  q 
qs q
 qw q qw
 
&lt;/textarea&gt;

&lt;/form&gt;&lt;br /&gt;

&lt;form action=&quot;http://www.bilibili.com&quot; method=&quot;get&quot;&gt;
	&lt;table  border=&quot;5px&quot;&gt;
    	&lt;tr&gt;
    	&lt;td&gt;用户名&lt;/td&gt;
        &lt;td&gt;&lt;input type=&quot;text&quot;  name=&quot;txtname&quot;/&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;密码&lt;/td&gt;
        &lt;td&gt;&lt;input type=&quot;password&quot; name=&quot;txtPsw&quot; /&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;验证码&lt;/td&gt;
        &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;txtJude&quot; /&gt;&lt;!--&lt;img src=&quot;2.jpg&quot; height=&quot;1220&quot; /&gt;--&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;input type=&quot;checkbox&quot; name=&quot;txtRem&quot; /&gt;记住密码&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;&lt;/td&gt;
        &lt;td&gt;&lt;input type=&quot;submit&quot; /&gt;&lt;input type=&quot;reset&quot; /&gt;&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/table&gt;
</code></pre>
</form>
<div style="background:#6FF; height:50px; width:1000px">DIV独占一层，用于布局</div>
<span>Span标签修饰字体</span>
</body>
</html>
]]></content>
    </entry>
</feed>