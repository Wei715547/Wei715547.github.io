<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Wei715547.github.io</id>
    <title>Weiwei的个人网站</title>
    <updated>2020-05-10T04:46:56.894Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Wei715547.github.io"/>
    <link rel="self" href="https://Wei715547.github.io/atom.xml"/>
    <subtitle>7</subtitle>
    <logo>https://Wei715547.github.io/images/avatar.png</logo>
    <icon>https://Wei715547.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Weiwei的个人网站</rights>
    <entry>
        <title type="html"><![CDATA[最高分排序]]></title>
        <id>https://Wei715547.github.io/post/zui-gao-fen-pai-xu/</id>
        <link href="https://Wei715547.github.io/post/zui-gao-fen-pai-xu/">
        </link>
        <updated>2020-05-10T04:36:59.000Z</updated>
        <content type="html"><![CDATA[<p>public  void SaveScore (int score)<br>
{<br>
List<int> list = bestScoreArr.ToList();//先将数组转化为List<br>
//系统:Linq方法(using System.Linq;)<br>
list.Sort((x, y) =&gt; (-x.CompareTo(y)));//调用List的Sort方法，从大到小对list进行排序[（-x）(从小到大改为x<br>
bestScoreArr = list.ToArray();//将排好序的list转给数组</p>
<pre><code>    //50  20  10 加入传score为60，则将60排在低 bestScoreArr[0]

    int index = -1;
    for (int i = 0; i &lt; bestScoreArr .Count() ; i++)
    {
        if (score &gt;bestScoreArr [i])//score依次与数组中的数进行对比，当比一个数大时，记录这个数的索引将后面的数都向后移。
        {
            index = i;
        }
    }
    if (index == -1) return;//score比数组中的值都小，不需保存，退出方法。

    for (int i = bestScoreArr .Length -1; i &gt;index ; i--)//从后向前将index之后的数据依次向后移
    {
        bestScoreArr[i] = bestScoreArr[i - 1];

    }
    bestScoreArr[index] = score;//将score填入空出位。
    Save();//保存。
}
</code></pre>
<p>//要存储的游戏数据类<br>
public class GameDate<br>
{<br>
public  static bool IsAgainGame =false ;</p>
<pre><code>private bool isFirstGame;
private bool isMusicOn;

private int[] bestScoreArr;
public void SetBestScoreArr(int[] bestScoreArr)
{
    this.bestScoreArr = bestScoreArr;
}
 public int [] GetBestScoreArr()
{
    return bestScoreArr;
}
//（其他......get;set方法省略）

private int selectSkin;
private bool[] skinUnlocked;
private int diamondCount;
</code></pre>
<p>}</p>
<pre><code>/// &lt;summary&gt;
/// 储存数据
/// &lt;/summary&gt;
private void Save()
{
    try
    {
        BinaryFormatter bf = new BinaryFormatter();
        using (FileStream fs = File.Create(Application.persistentDataPath + &quot;/DameData.data&quot;))

        {
            data.SetBestScoreArr(bestScoreArr);
            data.SetDiamondCount(diamondCount);
            data.SetIsFirstGame(isFirstGame);
            data.SetMusicOn(isMusicOn);
            data.SetSelectSkin(selectSkin);
            data.SetSkinUnlocked(skinUnlocked);
            bf.Serialize(fs, data);

        }
    }
    catch (System.Exception e)
    {
        Debug.Log(e.Message);

    }
}
/// &lt;summary&gt;
/// 读取数据
///using System.Runtime.Serialization.Formatters.Binary;
///using System.IO;
/// &lt;/summary&gt;
private void Read()
{
    try
    {
        BinaryFormatter bf = new BinaryFormatter();
        using (FileStream fs = File .Open (Application.persistentDataPath + &quot;/DameData.data&quot;,FileMode.Open ))
        {
            data = (GameDate )bf.Deserialize(fs);
        }
    }
    catch (System.Exception e)
    {
        Debug.Log(e.Message);
    }
}</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ray]]></title>
        <id>https://Wei715547.github.io/post/ray/</id>
        <link href="https://Wei715547.github.io/post/ray/">
        </link>
        <updated>2020-05-09T11:48:20.000Z</updated>
        <content type="html"><![CDATA[<p>void Update()<br>
{<br>
if (Input.GetMouseButtonDown(1))<br>
{<br>
Ray ray = Camera .main .ScreenPointToRay ( Input.mousePosition);<br>
RaycastHit hit;<br>
if (!Physics.Raycast(ray, out hit))<br>
{<br>
//hit.collider .gameObject //射线打到的物体<br>
return;<br>
}<br>
navMeshAgent.destination = hit.point ;//碰撞点<br>
}</p>
<pre><code>}
![](https://Wei715547.github.io/post-images/1589025091557.jpg)
![](https://Wei715547.github.io/post-images/1589025123139.jpg)</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[插值/自定义曲线]]></title>
        <id>https://Wei715547.github.io/post/cha-zhi/</id>
        <link href="https://Wei715547.github.io/post/cha-zhi/">
        </link>
        <updated>2020-05-09T11:40:43.000Z</updated>
        <content type="html"><![CDATA[<pre><code>public AnimationCurve sp;
private float x;//带入曲线x+=Time.deltaTime/psTime
public float pstime;//越大移动“y”(sp.Evaluate(x))增长越慢

if (Input.GetKey(KeyCode.L))
    {
    x += Time.deltaTime / pstime;
    transform.position = Vector3.Lerp(transform.position, Vector3.up * 5, sp.Evaluate(x));
        //Lerp(a,b,f)---f:0~1, 0时返回a,1时返回b，0.5时返回a,b中间值
    }
    else x = 0;</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SendMessage]]></title>
        <id>https://Wei715547.github.io/post/sendmessage/</id>
        <link href="https://Wei715547.github.io/post/sendmessage/">
        </link>
        <updated>2020-05-09T08:16:59.000Z</updated>
        <content type="html"><![CDATA[<p>private void OnCollisionEnter2D(Collision2D collision)<br>
{<br>
if (collision.gameObject.tag == &quot;Enm&quot;)<br>
{<br>
Enemis eni = collision.gameObject.GetComponent<Enemis>();<br>
if (ani.GetBool(&quot;Down&quot;))<br>
{<br>
eni.Died();</p>
<pre><code>            //collision.gameObject.SendMessage(&quot;Dide&quot;);

            /*FrogRangAI frog =                        collision.gameObject.GetComponent&lt;FrogRangAI&gt;();
            frog.Died();*/
            
            AddUpForce();
        }</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Unity面试易考题-问题]]></title>
        <id>https://Wei715547.github.io/post/unity-mian-shi-yi-kao-ti-wen-ti/</id>
        <link href="https://Wei715547.github.io/post/unity-mian-shi-yi-kao-ti-wen-ti/">
        </link>
        <updated>2020-05-09T05:22:15.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://Wei715547.github.io/post-images/1589001744941.jpg" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Unity面试易考题-基本框架]]></title>
        <id>https://Wei715547.github.io/post/unity-mian-shi-yi-kao-ti-ji-ben-kuang-jia/</id>
        <link href="https://Wei715547.github.io/post/unity-mian-shi-yi-kao-ti-ji-ben-kuang-jia/">
        </link>
        <updated>2020-05-09T05:17:15.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://Wei715547.github.io/post-images/1589001472730.jpg" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Unity面试易考题-数据结构]]></title>
        <id>https://Wei715547.github.io/post/unity-mian-shi-yi-kao-ti-shu-ju-jie-gou/</id>
        <link href="https://Wei715547.github.io/post/unity-mian-shi-yi-kao-ti-shu-ju-jie-gou/">
        </link>
        <updated>2020-05-09T05:14:10.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://Wei715547.github.io/post-images/1589001324001.jpg" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Unity面试易考题-排序]]></title>
        <id>https://Wei715547.github.io/post/unity-mian-shi-yi-kao-ti-pai-xu/</id>
        <link href="https://Wei715547.github.io/post/unity-mian-shi-yi-kao-ti-pai-xu/">
        </link>
        <updated>2020-05-09T05:11:43.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://Wei715547.github.io/post-images/1589001203393.jpg" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Unity面试易考题 - C#相关]]></title>
        <id>https://Wei715547.github.io/post/unity-mian-shi-yi-kao-ti-cxiang-guan/</id>
        <link href="https://Wei715547.github.io/post/unity-mian-shi-yi-kao-ti-cxiang-guan/">
        </link>
        <updated>2020-05-09T04:56:31.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://Wei715547.github.io/post-images/1589000914635.jpg" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[(敌人类）提取共有属性/方法]]></title>
        <id>https://Wei715547.github.io/post/ti-qu-gong-you-shu-xing-fang-fa/</id>
        <link href="https://Wei715547.github.io/post/ti-qu-gong-you-shu-xing-fang-fa/">
        </link>
        <updated>2020-05-08T14:42:30.000Z</updated>
        <content type="html"><![CDATA[<p>using System.Collections;<br>
using System.Collections.Generic;<br>
using UnityEngine;</p>
<p>public class Enemis : MonoBehaviour<br>
{<br>
protected Animator ani;<br>
protected CircleCollider2D cl;<br>
// Start is called before the first frame update<br>
protected virtual void Start()<br>
{<br>
ani = GetComponent<Animator>();<br>
cl = GetComponent<CircleCollider2D>();<br>
}</p>
<pre><code>public void Died()
{
    ani.SetTrigger(&quot;Died&quot;);
    cl.enabled = false;
}

public void D()
{
    Destroy(gameObject);
}
</code></pre>
<p>}</p>
<p>//应用-所有敌人继承Enemis<br>
private void OnCollisionEnter2D(Collision2D collision)         //(Player内代码)<br>
{<br>
if (collision.gameObject.tag == &quot;Enm&quot;)<br>
{<br>
//Enemis eni = collision.gameObject.GetComponent<Enemis>();//子类对象赋给父类引用(由于各子类不同)/(通过子类获取子类中父类实例--便于调用父类方法)👌</p>
<pre><code>        if (ani.GetBool(&quot;Down&quot;))
        {
            //eni.Died();//直接调用父类中所有子类共有行为👌

            collision.gameObject.SendMessage(&quot;Died&quot;);//或者不需声明父类直接在子类中调用父类方法👍👍👍

            //collision.gameObject.transform.GetComponent&lt;Eagle&gt;().Died();
            //FrogRangAI frog = collision.gameObject.GetComponent&lt;FrogRangAI&gt;();
            //frog.Died();
//由于敌人种类不确定(Eagle,FrogRangAI)，所以不能获取子类来调用父类中共有行为。🖕🖕🖕

            AddUpForce();
        }
        else if (transform.position.x &lt; collision.gameObject.transform.position.x)
        {
            playerR.velocity = new Vector2(-3, playerR.velocity.y);
            IsHaert = true;
        }
        else if (transform.position.x &gt; collision.gameObject.transform.position.x)
        {
            playerR.velocity = new Vector2(3, playerR.velocity.y);
            IsHaert = true;
        }
        GamePanel.Intence.Damage();
    }
</code></pre>
]]></content>
    </entry>
</feed>